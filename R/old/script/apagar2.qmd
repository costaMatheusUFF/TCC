---
title: "Comparativo mercado cripto x mercado tradicional"
format: 
  html
editor: visual
---

## Quarto

```{r}
#| label: lib and vars
#| echo: false
#| warning: false

library(tidyverse)
library(knitr)
library(gt)
library(openxlsx)
library(PerformanceAnalytics)

asset_return = readRDS("outputData/assetReturn8.rds")
asset_returnStoCkMarket = readRDS("outputData/assetReturnStockMarket.rds")
Nsymbols = 8
window <- 30

```

# Criptmoeda 

## Taxa selic 0.1375

```{r}
#| label: taxaSelic0.1375 Criptmoeda
rfr = 0.1375

possibilities01375 = read.xlsx("outputData/Possibilities0.1-0.1375.xlsx") %>% 
    mutate_all(~as.numeric(.x))

min_var01375 <- slice_min(possibilities01375,sd)
max_sr01375 <- slice_max(possibilities01375,sharpeRatePortfolio)
max_re01375 <- slice_max(possibilities01375,mean)

w = max_sr01375[1:Nsymbols] %>% unlist()

portfolio_return_opmitized01375 = Return.portfolio(asset_return,
                                              weights = w,
                                              rebalance_on = "months")




sd_portfolio_optimized01375 = sd(portfolio_return_opmitized01375$portfolio.returns)
mean_portfolio_optimized01375 = mean(portfolio_return_opmitized01375$portfolio.returns)
sr_portfolio_optimized01375 = max_sr01375$sharpeRatePortfolio



possibilities01375 %>%
  ggplot(aes(x = sd, y = mean, color = sharpeRatePortfolio)) +
  geom_point() +
  theme_classic() +
  #scale_y_continuous(labels = scales::percent) +
  scale_x_continuous(labels = scales::percent) +
  labs(x = 'Risco',
       y = 'Retorno esperado',
       title = "Criptomoeda: Optimização de portfolio & Fronteira eficiente taxa selic 0,1375",
       colour = "Indice sharpe") +
  geom_point(aes(x = sd,
                 y = mean), data = min_var01375, color = 'red') +
  geom_point(aes(x = sd,
                 y = mean), data = max_sr01375, color = 'red') +
  geom_text(x=min_var01375$sd, y = min_var01375$mean + .0002,label="Menor risco", color = "red") +
  geom_text(x=max_sr01375$sd, y = max_sr01375$mean + .0002,label="Maior indice sharpe", color = "red", check_overlap = T) +
  theme_bw() +
  theme( plot.title = element_text(hjust = .5))


# Rolamento
rolling_sd_portfolio_return_opmitized01375= rollapply(portfolio_return_opmitized01375,
                                           FUN = sd,
                                           width = window) %>%
  na.omit() %>% 
  setNames("rolling_sd")

rolling_mean_portfolio_return_opmitized01375  = rollapply(portfolio_return_opmitized01375 ,
                                              FUN = mean,
                                              width = window) %>%
  na.omit() %>% 
  setNames("rolling_mean")

rolling_sr_portfolio_return_opmitized01375 = cbind(rolling_sd_portfolio_return_opmitized01375,
                   rolling_mean_portfolio_return_opmitized01375) %>% 
  as.data.frame(row.names = index(.)) %>%
  rownames_to_column("date") %>% 
  mutate(rolling_sr = (rolling_mean - rfr)/rolling_sd,
         date = as.Date(date))


```

## Taxa selic 0

```{r}
#| label: taxaSelic0 Criptmoeda
rfr = 0

possibilities0 = read.xlsx("outputData/Possibilities0.1-0.xlsx") %>% 
    mutate_all(~as.numeric(.x))

min_var0 <- slice_min(possibilities0,sd)
max_sr0 <- slice_max(possibilities0,sharpeRatePortfolio)
max_re0 <- slice_max(possibilities0,mean)
w = max_sr0[1:Nsymbols] %>% unlist()

portfolio_return_opmitized0 = Return.portfolio(asset_return,
                                              weights = w,
                                              rebalance_on = "months")

sd_portfolio_optimized0 = sd(portfolio_return_opmitized0$portfolio.returns)
mean_portfolio_optimized0 = mean(portfolio_return_opmitized0$portfolio.returns)
sr_portfolio_optimized0 = max_sr0$sharpeRatePortfolio

possibilities0 %>%
  ggplot(aes(x = sd, y = mean, color = sharpeRatePortfolio)) +
  geom_point() +
  theme_classic() +
  #scale_y_continuous(labels = scales::percent) +
  scale_x_continuous(labels = scales::percent) +
  labs(x = 'Risco',
       y = 'Retorno esperado',
       title = "Criptomoeda: Optimização de portfolio & Fronteira eficiente taxa selic 0",
       colour = "Indice sharpe") +
  geom_point(aes(x = sd,
                 y = mean), data = min_var0, color = 'red') +
  geom_point(aes(x = sd,
                 y = mean), data = max_sr0, color = 'red') +
  geom_text(x=min_var0$sd, y = min_var0$mean + .0002,label="Menor risco", color = "red") +
  geom_text(x=max_sr0$sd, y = max_sr0$mean + .0002,label="Maior indice sharpe", color = "red", check_overlap = T) +
  theme_bw() +
  theme( plot.title = element_text(hjust = .5))

#Rolamento

rolling_sd_portfolio_return_opmitized0= rollapply(portfolio_return_opmitized0,
                                           FUN = sd,
                                           width = window) %>%
  na.omit() %>% 
  setNames("rolling_sd")

rolling_mean_portfolio_return_opmitized0  = rollapply(portfolio_return_opmitized0 ,
                                              FUN = mean,
                                              width = window) %>%
  na.omit() %>% 
  setNames("rolling_mean")

rolling_sr_portfolio_return_opmitized0 = cbind(rolling_sd_portfolio_return_opmitized0,
                   rolling_mean_portfolio_return_opmitized0) %>% 
  as.data.frame(row.names = index(.)) %>%
  rownames_to_column("date") %>% 
  mutate(rolling_sr = (rolling_mean - rfr)/rolling_sd,
         date = as.Date(date))

```


## comparando

```{r}
#| label: Criptomoeda comparando melhores indices sharpe

comparativoCriptmoeda = rbind(max_sr0,max_sr01375) %>% 
  mutate(`Taxa Selic` = c(0,0.1375),
         tipo = "Criptomoeda") %>%
  relocate(`Taxa Selic`,tipo)

comparativoCriptmoeda %>% gt()

```



# StockMarket

## Taxa selic 0.1375

```{r}
#| label:  taxaSelic0.1375 StockMarket
rfr = 0.1375

possibilitiesStockMarket01375 = read.xlsx("outputData/PossibilitiesStockMarket0.1-0.1375.xlsx") %>% 
    mutate_all(~as.numeric(.x))

min_var01375 <- slice_min(possibilitiesStockMarket01375,sd)
max_sr01375 <- slice_max(possibilitiesStockMarket01375,sharpeRatePortfolio)
max_re01375 <- slice_max(possibilitiesStockMarket01375,mean)

w = max_sr01375[1:Nsymbols] %>% unlist()

portfolio_return_opmitizedStockMarket01375 = Return.portfolio(asset_returnStoCkMarket,
                                              weights = w,
                                              rebalance_on = "months")




sd_portfolio_optimized01375 = sd(portfolio_return_opmitizedStockMarket01375$portfolio.returns)
mean_portfolio_optimized01375 = mean(portfolio_return_opmitizedStockMarket01375$portfolio.returns)
sr_portfolio_optimized01375 = max_sr01375$sharpeRatePortfolio



possibilitiesStockMarket01375 %>%
  ggplot(aes(x = sd, y = mean, color = sharpeRatePortfolio)) +
  geom_point() +
  theme_classic() +
  #scale_y_continuous(labels = scales::percent) +
  scale_x_continuous(labels = scales::percent) +
  labs(x = 'Risco',
       y = 'Retorno esperado',
       title = "StockMarket: Optimização de portfolio & Fronteira eficiente taxa selic 0,1375",
       colour = "Indice sharpe") +
  geom_point(aes(x = sd,
                 y = mean), data = min_var01375, color = 'red') +
  geom_point(aes(x = sd,
                 y = mean), data = max_sr01375, color = 'red') +
  geom_text(x=min_var01375$sd, y = min_var01375$mean + .0002,label="Menor risco", color = "red") +
  geom_text(x=max_sr01375$sd, y = max_sr01375$mean + .0002,label="Maior indice sharpe", color = "red", check_overlap = T) +
  theme_bw() +
  theme( plot.title = element_text(hjust = .5))

# Rolamento
rolling_sd_portfolio_return_opmitizedStockMarket01375= rollapply(portfolio_return_opmitizedStockMarket01375,
                                           FUN = sd,
                                           width = window) %>%
  na.omit() %>% 
  setNames("rolling_sd")

rolling_mean_portfolio_return_opmitizedStockMarket01375  = rollapply(portfolio_return_opmitizedStockMarket01375 ,
                                              FUN = mean,
                                              width = window) %>%
  na.omit() %>% 
  setNames("rolling_mean")

rolling_sr_portfolio_return_opmitizedStockMarket01375 = cbind(rolling_sd_portfolio_return_opmitizedStockMarket01375,
                   rolling_mean_portfolio_return_opmitizedStockMarket01375) %>% 
  as.data.frame(row.names = index(.)) %>%
  rownames_to_column("date") %>% 
  mutate(rolling_sr = (rolling_mean - rfr)/rolling_sd,
         date = as.Date(date))


```


## Taxa selic 0

```{r}
#| label:  taxaSelic0 StockMarket
rfr = 0

possibilitiesStockMarket0 = read.xlsx("outputData/PossibilitiesStockMarket0.1-0.xlsx") %>% 
    mutate_all(~as.numeric(.x))

min_var0 <- slice_min(possibilitiesStockMarket0,sd)
max_sr0 <- slice_max(possibilitiesStockMarket0,sharpeRatePortfolio)
max_re0 <- slice_max(possibilitiesStockMarket0,mean)
w = max_sr0[1:Nsymbols] %>% unlist()

portfolio_return_opmitizedStockMarket0 = Return.portfolio(asset_returnStoCkMarket,
                                              weights = w,
                                              rebalance_on = "months")

sd_portfolio_optimizedStockMarket0 = sd(portfolio_return_opmitizedStockMarket0$portfolio.returns)
mean_portfolio_optimizedStockMarket0 = mean(portfolio_return_opmitizedStockMarket0$portfolio.returns)
sr_portfolio_optimizedStockMarket0 = max_sr0$sharpeRatePortfolio

possibilitiesStockMarket0 %>%
  ggplot(aes(x = sd, y = mean, color = sharpeRatePortfolio)) +
  geom_point() +
  theme_classic() +
  #scale_y_continuous(labels = scales::percent) +
  scale_x_continuous(labels = scales::percent) +
  labs(x = 'Risco',
       y = 'Retorno esperado',
       title = "StockMarket: Optimização de portfolio & Fronteira eficiente taxa selic 0",
       colour = "Indice sharpe") +
  geom_point(aes(x = sd,
                 y = mean), data = min_var0, color = 'red') +
  geom_point(aes(x = sd,
                 y = mean), data = max_sr0, color = 'red') +
  geom_text(x=min_var0$sd, y = min_var0$mean + .0002,label="Menor risco", color = "red") +
  geom_text(x=max_sr0$sd, y = max_sr0$mean + .0002,label="Maior indice sharpe", color = "red", check_overlap = T) +
  theme_bw() +
  theme( plot.title = element_text(hjust = .5))


#Rolamento

rolling_sd_portfolio_return_opmitizedStockMarket0= rollapply(portfolio_return_opmitizedStockMarket0,
                                           FUN = sd,
                                           width = window) %>%
  na.omit() %>% 
  setNames("rolling_sd")

rolling_mean_portfolio_return_opmitizedStockMarket0  = rollapply(portfolio_return_opmitizedStockMarket0 ,
                                              FUN = mean,
                                              width = window) %>%
  na.omit() %>% 
  setNames("rolling_mean")

rolling_sr_portfolio_return_opmitizedStockMarket0 = cbind(rolling_sd_portfolio_return_opmitizedStockMarket0,
                   rolling_mean_portfolio_return_opmitizedStockMarket0) %>% 
  as.data.frame(row.names = index(.)) %>%
  rownames_to_column("date") %>% 
  mutate(rolling_sr = (rolling_mean - rfr)/rolling_sd,
         date = as.Date(date))

```


# Comparando os melhores indices sharpes dentro de cada tabela


```{r}
#| label: StockMarket comparando melhores indices sharpe


comparativoStockMarket = rbind(max_sr0,max_sr01375) %>% 
  mutate(`Taxa Selic` = c(0,0.1375),
         tipo = "StockMarket") %>%
  relocate(`Taxa Selic`,tipo)

comparativoStockMarket %>% gt()
```


# Grafico de rolamento, window `r window`

```{r}
#| label: Rolamentos Graficos

rolling_sr_portfolio_return_opmitized01375 %>%
  ggplot(aes(x=date,y=rolling_sr)) +
  geom_line() +
  labs(title = "Criptomoeda: taxa selic 0.1375 Rolamento janela 30", y="Indice sharpe","Data") +
  theme_bw()


rolling_sr_portfolio_return_opmitized0 %>%
  ggplot(aes(x=date,y=rolling_sr)) +
  geom_line() +
  labs(title = "Criptomoeda: taxa selic 0 Rolamento janela 30", y="Indice sharpe","Data") +
  theme_bw()

rolling_sr_portfolio_return_opmitizedStockMarket01375 %>%
  ggplot(aes(x=date,y=rolling_sr)) +
  geom_line() +
  labs(title = "StockMarket: taxa selic 0.1375 Rolamento janela 30", y="Indice sharpe","Data") +
  theme_bw()


rolling_sr_portfolio_return_opmitizedStockMarket0 %>%
  ggplot(aes(x=date,y=rolling_sr)) +
  geom_line() +
  labs(title = "StockMarket: taxa selic 0 Rolamento janela 30", y="Indice sharpe","Data") +
  theme_bw()


```


